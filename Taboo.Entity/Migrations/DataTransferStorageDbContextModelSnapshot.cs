// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taboo.Entity.DataTransfer.Storage;

#nullable disable

namespace Taboo.Entity.Migrations
{
    [DbContext(typeof(DataTransferStorageDbContext))]
    partial class DataTransferStorageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.ForbiddenWordStorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ForbiddenWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("TBL_ForbiddenWord");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.GameStorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TBL_Game");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.OutWordStorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("WordId");

                    b.ToTable("TBL_OutWord");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.WordStorageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TBL_Word");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.ForbiddenWordStorageEntity", b =>
                {
                    b.HasOne("Taboo.Entity.DataTransfer.Storage.WordStorageEntity", "Word")
                        .WithMany("ForbiddenWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.OutWordStorageEntity", b =>
                {
                    b.HasOne("Taboo.Entity.DataTransfer.Storage.GameStorageEntity", "Game")
                        .WithMany("OutWords")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Taboo.Entity.DataTransfer.Storage.WordStorageEntity", "Word")
                        .WithMany("OutWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.GameStorageEntity", b =>
                {
                    b.Navigation("OutWords");
                });

            modelBuilder.Entity("Taboo.Entity.DataTransfer.Storage.WordStorageEntity", b =>
                {
                    b.Navigation("ForbiddenWords");

                    b.Navigation("OutWords");
                });
#pragma warning restore 612, 618
        }
    }
}
